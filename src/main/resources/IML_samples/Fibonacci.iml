program Fibonacci
global
  fun FibonacciRec(count:int64) returns const res:int64
  local
    var n1:int64;
    var n2:int64;
    var n3:int64
    do
      n1 init := 0; n2 init := 1; n3 init := 5;

      if count > 0 then
        n3 := n1 + n2;
        n1 := n2;
        n2 := n3;
        debugout n1;
        debugout n2;
        debugout n3
        // res init := FibonacciRec(count - 1)
      endif
    endfun;

  fun FibonacciLoop(n:int64) returns var n1:int64
  local
    var n2:int64;
    var n3:int64;
    var count:int64
  do
    n1 init := 0; n2 init := 1; n3 init := 0; count init := 0;

    while count < n do
      debugout n1;
      n3 := n1 + n2;
      n1 := n2;
      n2 := n3;
      count := count + 1
    endwhile
  endfun;

  NumerOfElements:int64;
  Result:int64
do
  Result init := 0;

  debugin NumerOfElements init;
  Result := FibonacciRec(NumerOfElements-2)
  // Result := FibonacciLoop(NumerOfElements)
endprogram
