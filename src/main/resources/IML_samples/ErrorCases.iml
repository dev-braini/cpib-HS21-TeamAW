// HYPER-ZENTRAL-ULTRA-WICHTIG
//  - Compile Time Error → CTE
//  - Runtime Error      → RE

program ErrorCases
global
  // GLOBAL INTEGERS
  int_global_1:int64;
  int_global_2:int64;
  const int_const:int64;

  // GLOBAL BOOLEANS
  bool_global_1:bool;
  bool_global_2:bool;
  // bool_global_2:int64;                // CTE: NameAlreadyDeclaredError
  // [];                                 // CTE: LexicalError
  // testcommand;                        // CTE: GrammarError

  // FUNCTION
  fun funDoStuff(
                  input_fun_1:int64,
    copy var      input_fun_2:bool,
    copy const    input_fun_3:int64,
    ref var       input_fun_4:bool,
    ref const     input_fun_5:int64
  ) returns const output_fun:int64
  local
    var   int_local_1:int64;
    const int_local_2:int64;
    var   bool_local:bool
    // var int_global_1:bool;            // CTE: NameAlreadyGloballyDeclErr
  do
    int_local_1 init := 5;
    input_fun_1          := 20;

    int_local_2 init := 0;
    // int_local_2 := 4;                 // CTE: CannotAssignToConstError

    // input_fun_5 := 66;                // CTE: CannotAssignToConstError
    input_fun_4 := false;

    call procDoStuff(int_local_1);

    output_fun init := 999
    // output_fun := 888                 // CTE: CannotAssignToConstError
  endfun;

  // PROCEDURE
  proc procDoStuff(ref input_proc_1:int64)
  do
    skip;
    // bool_global_2 := false;           // CTE: NotInitializedError
    bool_global_2 init := false;
    input_proc_1 := 777
  endproc
do

  // +---------------------------------------------------------------------+
  // |  INIT CHECK                                                         |
  // +---------------------------------------------------------------------+
  // debugout int_global_1;              // CTE: NotInitializedError
  int_global_1 init := 0;
  int_global_1 := 50;
  // debugin int_global_2;               // CTE: NotInitializedError
  debugin int_global_2 init;
  // int_global_1 init;                  // CTE: GrammarError
  // int_global_1 init := 4;             // CTE: AlreadyInitializedError


  // +---------------------------------------------------------------------+
  // |  CONST CHECK                                                        |
  // +---------------------------------------------------------------------+
  int_const init := 4;
  // int_const := 5;                     // CPE: CannotAssignToConstError
  // debugin int_const;                  // CPE: CannotAssignToConstError
  debugout int_const;


  // +---------------------------------------------------------------------+
  // |  TYPE CHECK                                                         |
  // +---------------------------------------------------------------------+
  bool_global_1 init := true;
  // bool_global_2 init := int_global_1; // CPE: TypeCheckErroe
  // int_global_1 := bool_global_1;      // CPE: TypeCheckError
  // debugout funDoStuff(                // CPE: TypeCheckError
  //   int_global_1, true, true,
  //   bool_global_1, int_global_1);
  // debugout funDoStuff(                // CPE: TypeCheckError
  //   int_global_1, 10, 10,
  //   bool_global_1, int_global_1);


  // +---------------------------------------------------------------------+
  // |  NAME CHECK                                                         |
  // +---------------------------------------------------------------------+
  // debugout testvar;                   // CTE: NameNotDeclaredError


  // +---------------------------------------------------------------------+
  // |  INVALID PARAMETER COUNT CHECK                                      |
  // +---------------------------------------------------------------------+
  // debugout funDoStuff(10, true, 10,
  //   bool_global_1, int_global_1, 10); // CTE: InvalidParamCountError
  // call procDoStuff(int_global_1, 10); // CTE: InvalidParamCountError

  // +---------------------------------------------------------------------+
  // |  L-RVAL CHECK  [expected funDoStuff(rval, rval, rval, lval, lval) ] |
  // +---------------------------------------------------------------------+
  debugout funDoStuff(int_global_1,
    true, 10, bool_global_1, int_global_1 );
  // debugout funDoStuff(int_global_1,   // CPE: LRValError
  //   true, 10, true, int_global_1);
  // call procDoStuff(10);               // CPE: LRValError

  // +---------------------------------------------------------------------+
  // |  PROCEDURE CALL CHECK                                               |
  // +---------------------------------------------------------------------+
  call procDoStuff(int_global_1);
  debugout bool_global_2;
  debugout int_global_1;
  debugout funDoStuff(10, true, 10, bool_global_1, int_global_1);
  debugout bool_global_1

  // run programm → type 'a'             // RT: Execution error: Not an int
  // run programm → type 2147483648      // RT: Execution error: Not an int

endprogram